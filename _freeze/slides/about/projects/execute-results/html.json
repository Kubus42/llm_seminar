{
  "hash": "a3eb00a1f8ce6b581f7b187f14be9641",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Projects: Large Language Models\"\nformat: \n    revealjs:\n        theme: default\n        chalkboard: true\n        footer: \"Seminar: LLM, WiSe 2024/25\"\n        logo: ../../assets/logo.svg\n---\n\n\n## What is the idea of the project phase?\n\n- Combine the theoretical knowledge about LLMs with a practical application\n- Embed an LLM into a business use case \n- Explore the possibilities of LLMs (which are not restricted to chats bots!)\n\n\n## Project phase schedule\n- Project ideation \n- Team building \n- Work on projects in teams \n- Project presentation\n- Reflections & Summary\n\n## What your presentation should include (Part 1)\n\n- **General**:\n    - What is your prototype? What can it do?\n    - How did you (technically) solve it?\n    - Why/where is a language model needed here?\n\n## What your presentation should include (Part 2)\n- **Business**:\n    - What could be a business case for your prototype, or where can it be applied?\n    - Who would be the main stakeholder of your application?\n    - What would be similar use cases to what you have done? Where would such a tool be needed?\n\n## What your presentation should include (Part 3)\n- **Learnings**:\n    - What has been the biggest challenge(s) in your project?\n    - What do you think has been the greatest learning?\n    - Which techniques from the seminar did you use?\n\n\n## What your summary should include (Part 1) \n\n- 2-3 pages in total\n- What is your prototype? What can I do?\n- What could be a business case for your prototype, or where can it be applied? Who would be the main stakeholder of your application?\n- Where in your prototype do you need GPT/a language model and why?\n\n\n## What your summary should include (Part 2)\n- What are current limitations/challenges of your prototype and how could you (potentially) overcome them? Can you imagine challenges for your prototype in production?\n- What have been your main learnings during the creation of your prototype (and/or) the seminar itself? Which of the techniques presented in the seminar did you use?\n\n\n# Project ideas\n\n## Question-Answering Chatbot \nBuild a chatbot that can answer questions posed by users on a specific topic provided in form of documents. Users input their questions, the chatbot retrieves relevant information from a pre-defined set of documents, and uses the information to answer the question.\n\n## Document tagging / classification \nUse GPT and its tools (e.g., function calls) and/or embeddings to classify documents or assign tags to them. Example: Sort bug reports or complaints into categories depending on the problem.\n\n## Clustering of text-based entities \nCreate a small tool that can cluster text-based entities based on embeddings, for example, groups of texts or keywords. Example: Structure a folder of text files based on their content.\n\n## Text-based RPG Game\nDevelop a text-based role-playing game where players interact with characters and navigate through a story generated by GPT. Players make choices that influence the direction of the narrative.\n\n## Sentiment Analysis Tool\nBuild an app that analyzes the sentiment of text inputs (e.g., social media posts, customer reviews) using GPT. Users can input text, and the app provides insights into the overall sentiment expressed in the text.\n\n## Text Summarization Tool \nCreate an application that summarizes long blocks of text into shorter, concise summaries. Users can input articles, essays, or documents, and the tool generates a summarized version.\n\n## Language Translation Tool \nBuild a simple translation app that utilizes GPT to translate text between different languages. Users can input text in one language, and the app outputs the translated text in the desired language. Has to include some nice tweaks.\n\n## Personalized Recipe Generator \nDevelop an app that generates personalized recipes based on user preferences and dietary restrictions. Users input their preferred ingredients and dietary needs, and the app generates custom recipes using GPT.\n\n## Lyrics Generator \nCreate a lyrics generation tool that generates lyrics based on user input such as themes, music style, emotions, or keywords. Users can explore different poetic styles and themes generated by GPT.\n\n# How to build you app\n\n## Tools \n\n- You can use everything in the Jupyterlab (put `pip list` in a terminal to see all Python packages)\n- If there are specific packages you need, we can organize them\n- You can simply build your application in a Jupyter notebook!\n- Or: Use **Dash**!\n\n\n## Dash \nPut the following files into your home in the Jupyterlab: \n\n`my_layout.py`\n\n::: {#ebf749fd .cell execution_count=1}\n``` {.python .cell-code}\nfrom dash import html\nfrom dash import dcc\n\n\nlayout = html.Div([\n    html.H1(\"Yeay, my app!\"),\n    html.Div([\n        html.Label(\"Enter your text:\"),\n        dcc.Input(id='input-text', type='text', value=''),\n        html.Button('Submit', id='submit-btn', n_clicks=0),\n    ]),\n    html.Div(id='output-container-button')\n])\n```\n:::\n\n\n--- \n\n`my_callbacks.py`\n\n::: {#1d493a64 .cell execution_count=2}\n``` {.python .cell-code}\nfrom dash.dependencies import (\n    Input, \n    Output\n)\nfrom dash import html\n\n\ndef register_callbacks(app):\n    @app.callback(\n        Output('output-container-button', 'children'),\n        [Input('submit-btn', 'n_clicks')],\n        [Input('input-text', 'value')]\n    )\n    def update_output(n_clicks, input_value):\n        if n_clicks > 0:\n            return html.Div([\n                html.Label(\"You entered:\"),\n                html.P(input_value)\n            ])\n        else:\n            return ''\n\n```\n:::\n\n\n--- \n\nNow you can run your own app in the Jupyterlab here: \n\n![MyApp Launcher](../../assets/my_app.png)\n\n",
    "supporting": [
      "projects_files"
    ],
    "filters": [],
    "includes": {}
  }
}
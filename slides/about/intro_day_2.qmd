---
title: "Some updates"
format: 
    revealjs:
        theme: default
        chalkboard: true
        footer: "Seminar: LLM, SoSe 2025"
        logo: ../../assets/logo.svg
---

## Day 2 (24.04.2024):
- Introduction & Getting to know each other
- Survey (experiences & expectations) & Learning goals & Evaluation criteria
- Review data:unplugged
- Introduction to the general topic & Python & Jupyter 
- Introduction NLP (tokenization, matching, statistical text analysis)

## Day 3 (30.04.2024):
- Crash course machine learning
- Conceptual introduction to LLM
- The OpenAI API & Prompting using Python
- Application concept & Group brainstorming


## Day 4 (08.05.2024):
- Start: Project work on prototype & mentoring
- ~~Project presentations &~~ Reflections on the seminar
- Now and then: Left-over topics


## What is the idea of the project phase?

- Combine the theoretical knowledge about LLMs with a practical application
- Embed an LLM into a business use case 
- Explore the possibilities of LLMs (which are not restricted to chats bots!)


## Project phase schedule
- Project ideation 
- Team building 
- Work on projects in teams 
- Project presentation
- Reflections & Summary


# Project ideas

## Question-Answering Chatbot 
Build a chatbot that can answer questions posed by users on a specific topic provided in form of documents. Users input their questions, the chatbot retrieves relevant information from a pre-defined set of documents, and uses the information to answer the question.

## Document tagging / classification 
Use GPT and its tools (e.g., function calls) and/or embeddings to classify documents or assign tags to them. Example: Sort bug reports or complaints into categories depending on the problem.

## Clustering of text-based entities 
Create a small tool that can cluster text-based entities based on embeddings, for example, groups of texts or keywords. Example: Structure a folder of text files based on their content.

## Text-based RPG Game
Develop a text-based role-playing game where players interact with characters and navigate through a story generated by GPT. Players make choices that influence the direction of the narrative.

## Sentiment Analysis Tool
Build an app that analyzes the sentiment of text inputs (e.g., social media posts, customer reviews) using GPT. Users can input text, and the app provides insights into the overall sentiment expressed in the text.

## Text Summarization Tool 
Create an application that summarizes long blocks of text into shorter, concise summaries. Users can input articles, essays, or documents, and the tool generates a summarized version.

## Language Translation Tool 
Build a simple translation app that utilizes GPT to translate text between different languages. Users can input text in one language, and the app outputs the translated text in the desired language. Has to include some nice tweaks.

## Personalized Recipe Generator 
Develop an app that generates personalized recipes based on user preferences and dietary restrictions. Users input their preferred ingredients and dietary needs, and the app generates custom recipes using GPT.

## Lyrics Generator 
Create a lyrics generation tool that generates lyrics based on user input such as themes, music style, emotions, or keywords. Users can explore different poetic styles and themes generated by GPT.



## Evaluation
- Your data:unplugged summary: 35%
- Your prototype / code / documentation: 65%


## What is the data:unplugged summary? 
A short reflection on a session (approx. 300â€“500 words):

- Summary: What key points were made during the session?
- Practical Relevance: What specific use cases or problems were addressed?
- Personal Assessment: Which aspects did you find particularly interesting or critical? Do you see potential for your own ideas or projects?


## What is the summary? (Option 1)
- Hand in a 2-3 pages business idea around an LLM!
- What is your idea? What can it do? 
- What could be a good **business case** for your idea, or where can it be applied?
- What are possible challenges for your idea and how could you overcome them?
- What have been your main learnings during the seminar?


## What is the summary? (Option 2)
- Hand in your code and approx. 1 page of explanation / documentation!
- What is your prototype? 
- What can it do and how does it do it?
- What are current limitations of your prototype and how could you overcome them?
- What have been your main learnings during the creation of your prototype?


# Let's get started: How do machines learn?